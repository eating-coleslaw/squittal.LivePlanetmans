@page "/worlds"
@using squittal.LivePlanetmans.Shared.Models
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h4>Planetside Servers</h4>

<ServerSelectMenu />

@if (worlds == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table-sm">
        <thead>
            <tr>
                <th>Server ID</th>
                <th>Server</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var world in worlds)
            {
                <tr>
                    <td>@world.Id</td>
                    <td>@world.Name</td>
                </tr>
            }
        </tbody>
    </table>
}

<EditForm Model="@selectedWorld" OnValidSubmit="@OnWorldChange">
    <InputText id="name" @bind-Value="@selectedWorld.Name" />
    <label for="server">Server Select: </label>
    <InputSelect id="server" @bind-Value="@selectedWorldId" @onchange="@OnWorldChange">
        @if (string.IsNullOrWhiteSpace(selectedWorldId))
        {
            <option value="">-- Select a Server --</option>
        }
        <option value="10">Miller</option>
        <option value="1">Connery</option>
    </InputSelect>
    <button type="submit">Submit</button>
</EditForm>

<p>
    <select id="worldSelect" @onchange="OnWorldIdChange">
        @if (string.IsNullOrWhiteSpace(selectedWorldId))
        {
            <option value="">- Servers -</option>
        }
        @if (worlds != null)
        {
            @foreach (var world in worlds)
            {
                <option value="@world.Id.ToString()">@world.Name</option>
            }
        }
    </select>
</p>

@code {
    World[] worlds;

    private World selectedWorld = new World();

    string selectedWorldId = "";
    string selectedWorldName = "";

    protected override async Task OnInitializedAsync()
    {
        worlds = await Http.GetJsonAsync<World[]>("api/Worlds");
    }

    void OnWorldChange()
    {
        StateHasChanged();
        NavigationManager.NavigateTo($"activity/{selectedWorldId}");
    }

    void OnWorldIdChange(ChangeEventArgs eventArgs)
    {
        selectedWorldId = eventArgs.Value.ToString();
        NavigationManager.NavigateTo($"activity/{selectedWorldId}");
    }

}