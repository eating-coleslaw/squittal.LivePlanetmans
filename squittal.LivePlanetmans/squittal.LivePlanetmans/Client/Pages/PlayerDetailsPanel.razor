@page "/playerstats"
@page "/playerstats/{characterId}"
@using squittal.LivePlanetmans.Shared.Models
@inject HttpClient Http


@if (string.IsNullOrWhiteSpace(characterId))
{
    <h2>Player Details</h2>
    <p><em>Select a player</em></p>
}
else
{
    //<p>@*Player ID: @characterId*@</p>
    @if (player != null)
    {
        <div class="h2" style="margin-bottom: 0px; word-wrap: break-word;">
            <a href="@GetUrlFromCharacterName(player.Name)" target="_blank" style="color:@GetFactionColorFromId(player.FactionId);">
                @player.Name
                <span class="h6 oi oi-external-link"></span>
            </a>
            
        </div>
        <div>
            <a href="@GetUrlFromCharacterId(player.Id)" class="text-muted h6" target="_blank">
                @player.Id
                <span class="h6 oi oi-external-link" style="font-size: 60%;"></span>
            </a>
        </div>
        <p>
            @*<h2>@player.Name</h2><span>[@player.Id]</span>*@
            <b>Faction </b>@player.FactionId
            <b>Rank </b>@player.BattleRank~@player.PrestigeLevel
        </p>
    }

    @if (kills == null)
    {
        <p><em>Loading killboard...</em></p>
    }
    else
    {
        <h5>Kills This Hour</h5>
        <div style="max-height: 400px; overflow: auto;">
            <table class="table-sm table table-striped" style="font-size: 0.85rem !important;">
                <tbody>
                    @foreach (var kill in kills)
                    {
                        <tr style="background-color:@GetRowBgColor(kill.VictimId); color:@GetFactionColorFromId(kill.VictimFactionId);">
                            <td style="padding-top: 0.1rem; padding-bottom: 0.1rem;">
                                @if (kill.IsHeadshot == true)
                                {
                                    <span class="oi small oi-x" aria-hidden="true" style="padding: 0rem !important;"></span>
                                }
                            </td>
                            <td style="padding-top: 0.1rem; padding-bottom: 0.1rem;">
                                @if (kill.VictimId == characterId)
                                {
                                    @kill.AttackerName
                                }
                                else
                                {
                                    @kill.VictimName
                                }
                            </td>
                            <td style="padding-top: 0.1rem; padding-bottom: 0.1rem;">
                                @kill.KillTimestamp.ToLongTimeString()
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
}

@code {
    Character player;

    PlayerKillboardItem[] kills;

    int fetchTries = 0;

    [Parameter]
    public string characterId { get; set; }


    protected override async Task OnInitializedAsync()
    {
        await OnPlayerIdChange();
    }

    protected override async Task OnParametersSetAsync()
    {
        await OnPlayerIdChange();
    }

    private async Task OnPlayerIdChange()
    {
        fetchTries += 1;
        if (!string.IsNullOrWhiteSpace(characterId))
        {
            try
            {
                Task<Character> playerTask = Http.GetJsonAsync<Character>($"api/PlayerDetails/{characterId}");
                Task<PlayerKillboardItem[]> killsTask = Http.GetJsonAsync<PlayerKillboardItem[]>($"api/PlayerDetails/kills/{characterId}");
                player = await playerTask;
                StateHasChanged();
                kills = await killsTask;
                StateHasChanged();
            }
            catch (Exception)
            {
                //Ignore
            }
        }
    }

    string GetUrlFromCharacterId(string characterId)
    {
        //return $"https:/www.planetside2.com/players/#!/{characterId}";
        return $"https:/voidwell.com/ps2/player/{characterId}";
    }

    string GetUrlFromCharacterName(string characterName)
    {
        return $"https:/ps2.fisu.pw/player/?name={characterName.ToLower()}";
    }

    string GetRowBgColor(string victimId)
    {
        if (victimId == characterId)
        {
            return "#F9D3D6"; // FFD2E350"; //FFD2D3";
        }
        else
        {
            return "";
        }
    }

    string GetFactionColorFromId(int factionId)
    {
        string color = "#2F2F2F";

        switch (factionId)
        {
            //VS
            case 1:
                color = "#6A4CE0";
                break;

            //NC
            case 2:
                color = "#1E99FC";
                break;

            //TR
            case 3:
                color = "#FF6C70";
                break;
        }

        return color;
    }

}
